let pokemonRepository = (function() {
  let t = [],
    e = 'https://pokeapi.co/api/v2/pokemon/?limit=150';
  function n(e) {
    'object' == typeof e && t.push(e);
  }
  function i(t) {
    o(t).then(function() {
      a(t);
    });
  }
  function o(t) {
    let e = t.detailsUrl;
    return fetch(e)
      .then(function(t) {
        return t.json();
      })
      .then(function(e) {
        (t.imageUrlFront = e.sprites.front_default),
          (t.imageUrlBack = e.sprites.back_default),
          (t.height = e.height),
          (t.weight = e.weight),
          (t.types = []);
        for (let n = 0; n < e.types.length; n++)
          t.types.push(e.types[n].type.name);
        t.abilities = [];
        for (let n = 0; n < e.abilities.length; n++)
          t.abilities.push(e.abilities[n].ability.name);
      })
      .catch(function(t) {
        console.error(t);
      });
  }
  function a(t) {
    let e = $('.modal-body'),
      n = $('.modal-title');
    n.empty(), e.empty();
    let i = $('<h1>' + t.name.toUpperCase() + '</h1>'),
      o = $('<img class="modal-img" style="width:50%">');
    o.attr('src', t.imageUrlFront);
    let a = $('<img class="modal-img" style="width:50%">');
    a.attr('src', t.imageUrlBack);
    let l = $('<p>Height : ' + t.height + '</p>'),
      s = $('<p>Weight : ' + t.weight + '</p>'),
      p = $('<p>Types : ' + t.types.join(', ') + '</p>'),
      r = $('<p>Abilities : ' + t.abilities.join(', ') + '</p>');
    n.append(i),
      e.append(o),
      e.append(a),
      e.append(l),
      e.append(s),
      e.append(p),
      e.append(r);
  }
  return {
    add: n,
    getAll: function() {
      return t;
    },
    loadList: function() {
      return fetch(e)
        .then(function(t) {
          return t.json();
        })
        .then(function(t) {
          t.results.forEach(function(t) {
            n({ name: t.name, detailsUrl: t.url });
          });
        })
        .catch(function(t) {
          console.error(t);
        });
    },
    loadDetails: o,
    addListItem: function(t) {
      let e = document.querySelector('.list-group'),
        n = document.createElement('li');
      n.classList.add('group-list-item');
      let o = document.createElement('button');
      (o.innerText = t.name.charAt(0).toUpperCase() + t.name.slice(1)),
        o.classList.add('pokemon-button-class', 'btn', 'btn-primary'),
        o.setAttribute('data-target', '#pokemonModal'),
        o.setAttribute('data-toggle', 'modal'),
        n.appendChild(o),
        e.appendChild(n),
        o.addEventListener('click', function() {
          i(t);
        });
    },
    showDetails: i,
    showModal: a
  };
})();
pokemonRepository.loadList().then(function() {
  pokemonRepository.getAll().forEach(function(t) {
    pokemonRepository.addListItem(t);
  });
});
